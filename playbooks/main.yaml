- hosts: localhost
  name: DevOpsRZDTask
  become: yes
  vars:
  tasks:
    - name: Ensure Docker service is running
      become: yes
      service:
       name: docker
       state: started

         #- name: Create Docker network for task
         # shell: docker network create task

    - name: Start Node Exporter container
      docker_container:
        image: prom/node-exporter:latest
        name: node-exporter
        ports: "9100:9100"
        state: started
        networks:
          - name: task
        volumes:
          - /sys:/host/sys:ro
          - /proc:/host/proc:ro
          - /:/rootfs:ro

    - name: Start Prometheus container
      docker_container:
        image: prom/prometheus:latest
        name: prometheus
        user: "1001"
        env:
          PUID: "1001"
          GUID: "1001"
        volumes: 
          - ./prometheus:/prometheus
          - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        state: started
        ports: "9090:9090"
        networks:
          - name: task
       # command: [" --storage.tsdb.path=/prometheus --web.console.libraries=/etc/prometheus/console_libraries --web.console.templates=/etc/prometheus/consoles --web.enable-lifecycle"]

    - name: Start Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana-oss
        user: "0" 
        env:
          GF_LOG_LEVEL: debug
          GF_SECURITY_ADMIN_USER: root
          GF_SECURITY_ADMIN_PASSWORD: root
          GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /var/lib/grafana/dashboards/docker-container-metrics.json
          GF_USERS_ALLOW_SIGN_UP: "true"
        ports: "3000:3000"
        volumes:
          - ./grafana/dashboards:/var/lib/grafana/dashboards
          - ./grafana/dashboards:/etc/grafana/dashboards
          - ./grafana/provisioning:/etc/grafana/provisioning
          - ./grafana/backup/etc_conf:/etc/grafana 
          - ./grafana/backup/grafana.db:/var/lib/grafana/grafana.db:rw
            # - ./grafana.ini:/etc/grafana/grafana.ini:rw
        state: started
        networks:
          - name: task

    - name: Start cAdvisor container
      docker_container:
        name: cadvisor
        image: google/cadvisor:latest
        volumes:
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /:/rootfs:ro
          - /var/lib/docker/:/var/lib/docker:ro
        state: started
        ports: "8081:8080"
        networks:
          - name: task

    # - name: Copy Prometheus configuration file
    #   docker_copy:
    #     src: ./promgrafnode/prometheus/prometheus.yml
    #     dest: /etc/prometheus/prometheus.yml
    #     container: prometheus

    # - name: Copy Grafana provisioning datasources configuration
    #   docker_copy:
    #     src: ./grafana/provisioning/datasources
    #     dest: /etc/grafana/provisioning/datasources
    #     container: grafana
